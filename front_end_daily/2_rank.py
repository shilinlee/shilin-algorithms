"""
//给出一个排行榜例如
//  分数   rank
//  100     1
//  100     1
//   50     2
//   40     3
//   40     3
//   20     4
//   10     5
//
//输入为: 数组1:当前排行版分数 [100,100,50,40,40,20,10]
//       数组2:用户每一次的得分[5,25,50,120]
//       条件: 当分数一样的时候,rank相同, 分数越大的rank越小
//             数组1一定是正序
//             数组2一定是倒序
//输出: 用户每一次得分在排行版的rank
//例如: 5 为最小 第一次 得分rank为 6
//     不要把用户的分数插入到排行榜中，只需要比较每一次得分在排行版中的rank
//例如第一次使用了 5, 排行榜依然是[100,100,50,40,40,20,10] 不会是[100,100,50,40,40,20,10,5]
//需要考虑时间复杂度
"""

from bisect import *
scores = [100, 100, 50, 40, 40, 20, 10]
my_scores = [5, 25, 50, 120]

scores = list(set(map(int, scores)))
l = len(scores)
scores.sort()

alice = map(int, my_scores)
for i in alice:
    print(l - bisect_right(scores, i) + 1)